// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  name         String
  email        String    @unique
  passwordHash String
  role         Role      @default(BASIC)
  disabled     Boolean   @default(false)
  UserData     UserData?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email, role])
  @@map("users")
}

///? do we need to save nutrition profile in db as well?
model UserData {
  id                String        @id @default(uuid())
  diet              String?
  sex               Sex?
  activity_level    ActivityLevel @default(MODERATE)
  goal              Goal?         @default(MAINTAIN)
  age               Int?
  height            Int?
  weight            Int?
  intolerances      String[]
  favorite_cuisines String[]
  meals_per_day     Int
  favorite_recipes  Recipes[]     @relation("RecipesLikedBy")
  recipes_to_avoid  Recipes[]     @relation("RecipesAvoidedBy")
  meals             Meals[]       @relation("UserMealPlans")
  ingredients       Ingredients[] @relation("UserIngredients")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  @@index([diet, sex, activity_level, goal, height, weight])
  @@map("user_data")
}

model Recipes {
  id          String     @id @default(uuid())
  external_id String
  likedBy     UserData[] @relation("RecipesLikedBy")
  avoidedBy   UserData[] @relation("RecipesAvoidedBy")

  @@map("recipes")
}

model Meals {
  id                 String @id @default(uuid())
  recipe_external_id String

  user        UserData[]    @relation("UserMealPlans")
  ingredients Ingredients[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("meals")
}

model Ingredients {
  id          String @id @default(uuid())
  external_id String

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Meals     Meals      @relation(fields: [mealId], references: [id])
  mealId    String
  user      UserData[] @relation("UserIngredients")

  @@map("ingredients")
}

enum Role {
  BASIC
  ADMIN
}

enum Sex {
  MALE
  FEMALE
}

enum ActivityLevel {
  SEDENTARY
  LIGHT
  MODERATE
  VERYACTIVE
}

enum Goal {
  LOSEWEIGHT
  MAINTAIN
  GAINWEIGHT
}
