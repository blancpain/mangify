name: Testing pipeline

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Create temporary .env file
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" > .env
          echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
          echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
          echo "POSTGRES_HOST=${POSTGRES_HOST}" >> .env
          echo "REDIS_PORT=${REDIS_PORT}" >> .env
          echo "REDIS_HOST=${REDIS_HOST}" >> .env
          echo "DATABASE_URL=${DATABASE_URL}" >> .env
          echo "SESSION_SECRET=${SESSION_SECRET}" >> .env
          echo "REDIS_URL=${REDIS_URL}" >> .env
          echo "API_KEY=${API_KEY}" >> .env

      - name: Run tests and linting
        env:
          NODE_ENV: development
        run: |
          docker-compose -f docker-compose.dev.yml up -d  # Start the testing environment
          docker-compose -f docker-compose.dev.yml exec mangify-server-dev npm run lint # run server linting
          docker-compose -f docker-compose.dev.yml exec mangify-client-dev npm run lint # run client linting
          docker-compose -f docker-compose.dev.yml exec mangify-server-dev npm test  # run server tests
          cd client
          npm run cypress:open
          docker-compose -f docker-compose.dev.yml down -v  # Stop and remove the testing environment
