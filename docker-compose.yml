services:
  change-vol-ownership:
    image: busybox:latest
    volumes:
      - /:/host
    command: /bin/sh -c "mkdir -p /host/server/src/db/postgres_data_prod /host/server/src/db/redis_data_prod && chown -R 1000:1000 /host/server/src/db/postgres_data_prod /host/server/src/db/redis_data_prod"

  # change-vol-ownership:
  #   # We can use any image we want as long as we can chown
  #   image: ubuntu:22.04
  #   # Need a user priviliged enough to chown
  #   user: "root"
  #   # Specify the group in question
  #   group_add:
  #     - "1000"
  #   volumes:
  #     # The volume to chown
  #     - /:/host
  #   command: |
  #     mkdir -p /host/server/src/db/postgres_data_prod
  #     mkdir -p /host/server/src/db/redis_data_prod
  #     chown -R 1000:1000 /host/server/src/db/postgres_data_prod
  #     chown -R 1000:1000 /host/server/src/db/redis_data_prod

  # postgres db
  postgres:
    image: postgres:16
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ./server/src/db/postgres_data_prod:/var/lib/postgresql/data
    container_name: postgres-mangify
    depends_on:
      change-vol-ownership:
        condition: service_completed_successfully

  # redis db
  redis:
    image: redis:7
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./server/src/db/redis_data_prod:/data
    container_name: redis-mangify
    depends_on:
      change-vol-ownership:
        condition: service_completed_successfully

  # server
  server:
    image: mangify-server
    restart: always
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    build:
      context: ./server/
      dockerfile: Dockerfile
    volumes:
      - ./server:/usr/src/server
      - /usr/src/server/node_modules
    container_name: mangify-server
    environment:
      POSTGRES_HOST: postgres
      CHOKIDAR_USEPOLLING: true

  #client
  client:
    image: mangify-client
    restart: always
    build:
      context: ./client/
      dockerfile: Dockerfile
    volumes:
      - ./client:/usr/src/client
      # for local node_modules not to override the container node_modules we need to persist the volume
      # the other solutions is to run rebuild at start
      - /usr/src/client/node_modules
    container_name: mangify-client
    environment:
      CHOKIDAR_USEPOLLING: true

  # reverse proxy
  nginx:
    image: nginx:1.20.1
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: mangify-reverse-proxy
    depends_on:
      - client
      - server
      - postgres
      - redis
